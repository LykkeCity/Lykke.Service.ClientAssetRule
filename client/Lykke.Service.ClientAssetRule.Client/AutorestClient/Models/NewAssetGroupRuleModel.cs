// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.ClientAssetRule.Client.AutorestClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class NewAssetGroupRuleModel
    {
        /// <summary>
        /// Initializes a new instance of the NewAssetGroupRuleModel class.
        /// </summary>
        public NewAssetGroupRuleModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NewAssetGroupRuleModel class.
        /// </summary>
        public NewAssetGroupRuleModel(string name, string regulationId, IList<string> allowedAssetGroups, IList<string> declinedAssetGroups)
        {
            Name = name;
            RegulationId = regulationId;
            AllowedAssetGroups = allowedAssetGroups;
            DeclinedAssetGroups = declinedAssetGroups;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RegulationId")]
        public string RegulationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AllowedAssetGroups")]
        public IList<string> AllowedAssetGroups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DeclinedAssetGroups")]
        public IList<string> DeclinedAssetGroups { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (RegulationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RegulationId");
            }
            if (AllowedAssetGroups == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AllowedAssetGroups");
            }
            if (DeclinedAssetGroups == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DeclinedAssetGroups");
            }
        }
    }
}
